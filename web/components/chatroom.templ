package components

// TODO: I do not like how the form and textarea have a circular dependency.
// The form manages default submit & htmx:event: send-message.
// After websocket send, the UI/UX needs to "reset" the textarea's state.
templ Input() {
	<form id="chat-form" ws-send hx-trigger="submit, send-message" hx-on::ws-after-send="resetTextarea('#text-message')">
		<label for="text-message" class="sr-only">Your message</label>
		<div class="flex items-center px-3 py-2 rounded-lg bg-gray-50 dark:bg-gray-700">
			<textarea
				form="chat-form"
				id="text-message"
				rows="1"
				placeholder="Type your message..."
				class="no-scrollbar resize-none block mx-4 p-2.5 w-full text-sm text-gray-900 bg-white rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-800 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
				name="Content"
				maxlength="5000"
				onInput="autoHeight(this)"
				hx-on:keypress="sendMessageOnEnter(event)"
			></textarea>
			<button
				type="submit"
				class="inline-flex justify-center p-2 text-blue-600 rounded-full cursor-pointer hover:bg-blue-100 dark:text-blue-500 dark:hover:bg-gray-600"
			>
				<svg
					class="w-5 h-5 rotate-90 rtl:-rotate-90"
					aria-hidden="true"
					xmlns="http://www.w3.org/2000/svg"
					fill="currentColor"
					viewBox="0 0 18 20"
				>
					<path
						d="m17.914 18.594-8-18a1 1 0 0 0-1.828 0l-8 18a1 1 0 0 0 1.157 1.376L8 18.281V9a1 1 0 0 1 2 0v9.281l6.758 1.689a1 1 0 0 0 1.156-1.376Z"
					></path>
				</svg>
				<span class="sr-only">Send message</span>
			</button>
		</div>
		<script>
		const autoHeight = (elem) => {
			elem.style.height = '1px';
			elem.style.height = `${elem.scrollHeight}px`;
		}
		// Event handler, emits "send-message" if enter is pressed with no modifier key
		const sendMessageOnEnter = (event) => {
			if (event.key === "Enter" && !(event.shiftKey || event.altKey || event.ctrlKey || event.metaKey)) {
				event.preventDefault();
				htmx.trigger(event.target, "send-message");
			}
		};
		const resetTextarea = (selectors) => {
			const element = document.querySelector(selectors)
			if (element != null) {
				element.value = "";
				autoHeight(element)
			}
		};
	</script>
	</form>
}

templ Message(name string, content string, time string, isSelf bool) {
	<div hx-swap-oob="beforebegin:#chatroom-bottom">
		<div class={ "chat" , templ.KV("chat-start", !isSelf), templ.KV("chat-end", isSelf) }>
			<div class="chat-header">
				{ name }
				<time class="text-xs opacity-50">{ time }</time>
			</div>
			<div class="chat-bubble">{ content }</div>
		</div>
	</div>
}

templ Chatroom() {
	<div class="flex h-full flex-col w-3/5 m-auto shadow-2xl" hx-ext="ws" ws-connect="/ws/chatroom">
		<h1 class="text-center">Chat Room</h1>
		<div class="flex-1 overflow-hidden">
			<div class="h-full relative">
				<div class="h-full w-full overflow-y-auto">
					<scroller class="scroller flex flex-col pb-9">
						//Injected content here
						<anchor id="chatroom-bottom" class="anchor"></anchor>
					</scroller>
				</div>
			</div>
		</div>
		<div class="w-full">
			@Input()
		</div>
	</div>
}
